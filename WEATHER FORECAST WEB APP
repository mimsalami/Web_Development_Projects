HTML CODE : 

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Weather App</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Macondo&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <div id="app">
    <h2>Weather App</h2>
    <input type="text" id="city" placeholder="Enter city">
    <button onclick="getWeather()">Get Weather</button>
    
    <div id="weather-display">
      <img id="weather-icon" src="" alt="Weather Icon">
      <div id="temp-div"></div>
      <div id="weather-info"></div>
      <div id="hourly-forecast"></div>
    </div>
  </div>

  <script src="script.js" defer></script>
</body>
</html>





CSS CODE :

body {
  font-family: "Macondo", cursive;
  background: linear-gradient(to bottom, #74ebd5, #74ebd5);
  color: #333;
  text-align: center;
  padding: 20px;
}

#app {
  background: #ffffff;
  padding: 20px;
  border-radius: 12px;
  max-width: 400px;
  margin: auto;
  box-shadow: 0 4px 10px rgba(0,0,0,0.1);
}

input {
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 6px;
  margin-right: 8px;
}

button {
  padding: 8px 12px;
  border: none;
  background: #007bff;
  color: white;
  border-radius: 6px;
  cursor: pointer;
}

button:hover {
  background: #0056b3;
}

#weather-icon {
  display: none;
  width: 100px;
  margin: 10px auto;
}

#temp-div p {
  font-size: 32px;
  margin: 5px 0;
}

#hourly-forecast {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin-top: 15px;
}

.hourly-item {
  background: #afacac;
  border-radius: 8px;
  padding: 8px;
  margin: 5px;
  width: 80px;
  text-align: center;
}

.hourly-item img {
  width: 40px;
  height: 40px;
}




JAVASCRIPT CODE :

function getWeather() {
  const apiKey = 'bff35757122ffd96bcff5d1f88ced128';   ///(ENTER YOUR OWN APIKEY FROM OPEN WEATHER)
  const city = document.getElementById('city').value.trim();

  if (!city) {
    alert('Please enter a city');
    return;
  }

  const currentWeatherUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`;
  const forecastUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}`;

  fetch(currentWeatherUrl)
    .then(response => response.json())
    .then(data => {
      displayWeather(data);
    })
    .catch(error => {
      console.error('Error fetching current weather data:', error);
      alert('Error fetching current weather data. Please try again.');
    });

  fetch(forecastUrl)
    .then(response => response.json())
    .then(data => {
      displayHourlyForecast(data.list);
    })
    .catch(error => {
      console.error('Error fetching hourly forecast data:', error);
      alert('Error fetching hourly forecast data. Please try again.');
    });
}

function displayWeather(data) {
  const tempDivInfo = document.getElementById('temp-div');
  const weatherInfoDiv = document.getElementById('weather-info');
  const weatherIcon = document.getElementById('weather-icon');
  const hourlyForecastDiv = document.getElementById('hourly-forecast');

  weatherInfoDiv.innerHTML = '';
  hourlyForecastDiv.innerHTML = '';
  tempDivInfo.innerHTML = '';

  if (data.cod != 200) { 
  weatherInfoDiv.innerHTML = `<p>${data.message}</p>`;
  } else {
    const cityName = data.name;
    const temperature = Math.round(data.main.temp - 273.15);
    const description = data.weather[0].description;
    const iconCode = data.weather[0].icon;
    const iconUrl = `https://openweathermap.org/img/wn/${iconCode}@4x.png`;

    const temperatureHTML = `<p>${temperature}°C</p>`;
    const weatherHtml = `
      <p><strong>${cityName}</strong></p>
      <p>${description}</p>
    `;

    tempDivInfo.innerHTML = temperatureHTML;
    weatherInfoDiv.innerHTML = weatherHtml;
    weatherIcon.src = iconUrl;
    weatherIcon.alt = description;

    showImage();
  }
}

function displayHourlyForecast(hourlyData) {
  const hourlyForecastDiv = document.getElementById('hourly-forecast');
  hourlyForecastDiv.innerHTML = '';

  const next24Hours = hourlyData.slice(0, 8);

  next24Hours.forEach(item => {
    const dateTime = new Date(item.dt * 1000);
    const hour = dateTime.getHours().toString().padStart(2, '0');
    const temperature = Math.round(item.main.temp - 273.15);
    const iconCode = item.weather[0].icon;
    const iconUrl = `https://openweathermap.org/img/wn/${iconCode}.png`;

    const hourlyItemHtml = `
      <div class="hourly-item">
        <span>${hour}:00</span>
        <img src="${iconUrl}" alt="Hourly Weather Icon">
        <span>${temperature}°C</span>
      </div>
    `;

    hourlyForecastDiv.innerHTML += hourlyItemHtml;
  });
}

function showImage() {
  const weatherIcon = document.getElementById('weather-icon');
  weatherIcon.style.display = 'block';
}
